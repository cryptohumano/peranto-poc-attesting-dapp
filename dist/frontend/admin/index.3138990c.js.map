{"mappings":"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","sources":["src/frontend/admin/admin.tsx"],"sourcesContent":["import ky from 'ky';\nimport { useCallback, useEffect, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport {\n  BrowserRouter,\n  Link,\n  Route,\n  Routes,\n  generatePath,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport { paths as apiPaths } from '../../backend/endpoints/paths';\nimport { paths } from '../utilities/paths';\nimport { Credential } from '../../backend/utilities/credentialStorage';\n\nfunction generateAdminApiPath(path: string, params?: Record<string, unknown>) {\n  return generatePath(`/admin${path}`, params);\n}\n\nfunction Credential() {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n\n  const [credential, setCredential] = useState<Credential>();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (credential) {\n      return;\n    }\n    (async () => {\n      try {\n        setCredential(\n          await ky\n            .get(generateAdminApiPath(apiPaths.credentials.item, { id }))\n            .json(),\n        );\n      } catch {\n        setError(true);\n      }\n    })();\n  }, [credential, id]);\n\n  const [processing, setProcessing] = useState(false);\n  const handleAttest = useCallback(async () => {\n    try {\n      setError(false);\n      setProcessing(true);\n\n      setCredential(\n        await ky\n          .post(generateAdminApiPath(apiPaths.credentials.attest, { id }), {\n            timeout: false,\n            retry: {\n              limit: 10,\n              methods: ['post'],\n            },\n          })\n          .json(),\n      );\n    } catch {\n      setError(true);\n    } finally {\n      setProcessing(false);\n    }\n  }, [id]);\n\n  const handleReject = useCallback(async () => {\n    try {\n      setError(false);\n\n      await ky.delete(generateAdminApiPath(apiPaths.credentials.item, { id }));\n      navigate(paths.admin.home);\n    } catch {\n      setError(true);\n    }\n  }, [id, navigate]);\n\n  const handleRevoke = useCallback(async () => {\n    try {\n      setError(false);\n      setProcessing(true);\n\n      setCredential(\n        await ky\n          .post(generateAdminApiPath(apiPaths.credentials.revoke, { id }), {\n            timeout: false,\n            retry: {\n              limit: 10,\n              methods: ['post'],\n            },\n          })\n          .json(),\n      );\n    } catch {\n      setError(true);\n    } finally {\n      setProcessing(false);\n    }\n  }, [id]);\n\n  if (!credential) {\n    return error ? <p>Credential not found</p> : null;\n  }\n\n  const { claim, attestation } = credential;\n\n  return (\n    <section>\n      <pre>{JSON.stringify(claim, null, 4)}</pre>\n\n      {!attestation && (\n        <div>\n          <button disabled={processing} onClick={handleAttest}>\n            Attest\n          </button>\n          <button disabled={processing} onClick={handleReject}>\n            Reject\n          </button>\n        </div>\n      )}\n\n      {attestation && !attestation.revoked && (\n        <div>\n          <p>Attested ✅</p>\n          <button disabled={processing} onClick={handleRevoke}>\n            Revoke\n          </button>\n        </div>\n      )}\n\n      {attestation && attestation.revoked && <p>Revoked ❌</p>}\n\n      {processing && <p>Processing...</p>}\n\n      {error && <p>Oops, there was an error</p>}\n    </section>\n  );\n}\n\nfunction Credentials({ credentials }: { credentials: [string, Credential][] }) {\n  return (\n    <ul>\n      {credentials.map(([id]) => (\n        <li key={id}>\n          <Link to={generatePath(paths.admin.credential, { id })}>{id}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nfunction Admin() {\n  const [credentials, setCredentials] = useState<[string, Credential][]>();\n  const [error, setError] = useState(false);\n\n  const pendingCredentials = credentials?.filter(\n    ([, { attestation }]) => !attestation,\n  );\n  const attestedCredentials = credentials?.filter(\n    ([, { attestation }]) => attestation && !attestation.revoked,\n  );\n  const revokedCredentials = credentials?.filter(\n    ([, { attestation }]) => attestation && attestation.revoked,\n  );\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const credentials = await ky\n          .get(generateAdminApiPath(apiPaths.credentials.list))\n          .json<Record<string, Credential>>();\n\n        setCredentials(Object.entries(credentials));\n      } catch {\n        setError(true);\n      }\n    })();\n  }, []);\n\n  if (!credentials) {\n    return error ? <p>Unable to fetch credentials</p> : null;\n  }\n\n  return (\n    <section>\n      <h1>Admin Page</h1>\n      {credentials.length === 0 && <p>No credentials</p>}\n\n      {pendingCredentials && pendingCredentials.length > 0 && (\n        <section>\n          <h2>Pending credentials</h2>\n          <Credentials credentials={pendingCredentials} />\n        </section>\n      )}\n\n      {attestedCredentials && attestedCredentials.length > 0 && (\n        <section>\n          <h2>Attested credentials</h2>\n          <Credentials credentials={attestedCredentials} />\n        </section>\n      )}\n\n      {revokedCredentials && revokedCredentials.length > 0 && (\n        <section>\n          <h2>Revoked credentials</h2>\n          <Credentials credentials={revokedCredentials} />\n        </section>\n      )}\n    </section>\n  );\n}\n\nconst root = createRoot(document.querySelector('#app') as HTMLElement);\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path={paths.admin.credential} element={<Credential />} />\n      <Route path={paths.admin.home} element={<Admin />} />\n\n      <Route path=\"*\" element={<p>404 - Not found</p>} />\n    </Routes>\n  </BrowserRouter>,\n);\n"],"names":["$aaGF3","parcelRequire","$85c7db236223f8cf$var$generateAdminApiPath","path","params","$l4VFs","generatePath","$85c7db236223f8cf$var$Credential","id","useParams","navigate","useNavigate","credential","setCredential","$jQ7Zu","useState","error","setError","useEffect","$aLBVI","default","get","$3hLxt","paths","credentials","item","json","processing","setProcessing","handleAttest","useCallback","async","post","attest","timeout","retry","limit","methods","handleReject","delete","$5jKHo","admin","home","handleRevoke","revoke","jsx","claim","attestation","jsxs","JSON","stringify","disabled","onClick","revoked","$85c7db236223f8cf$var$Credentials","map","Link","to","$85c7db236223f8cf$var$Admin","setCredentials","pendingCredentials","filter","attestedCredentials","revokedCredentials","list","Object","entries","length","$5a1fP","createRoot","document","querySelector","render","BrowserRouter","Routes","Route","element"],"version":3,"file":"index.3138990c.js.map"}